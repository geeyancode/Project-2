<div class="form-row">
  <div class="col-md-11 mb-3">
    <center>
      <h3>Account Information</h3>
    </center>

  </div>
</div>


<form action="/api/user" method="POST" class="needs-validation" validate>
  <div class="container">
    <div class="form-row">
      <div class="col-md-5 mb-3">
        <label for="validationCustom01">Account Type</label>
        <label for="">Profile Type</label>
        <select class="form-control" name="userTypeId" id="">
          {{#each userTypeAll}}
          <option value="{{this.userTypeId}}">{{this.userTypeName}}</option>
          {{/each}}
        </select>
      </div>
    </div>

    <div class="form-row">
      <div class="col-md-5 mb-3">
        <label for="userName">User name</label>
        <input type="text" class="form-control" name="userName" id="userName" placeholder="Mark0123" required>
        <div class="valid-feedback">
          Looks good!
        </div>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-5">
        <label for="firstName">First name</label>
        <input type="text" class="form-control" name="firstName" id="firstName" placeholder="Mark" required>
        <div class="valid-feedback">
          Looks good!
        </div>
      </div>
      <div class="form-group col-md-5">
        <label for="lastName">Last name</label>
        <input type="text" class="form-control" name="lastName" id="lastName" placeholder="Otto" required>
        <div class="valid-feedback">
          Looks good!
        </div>
      </div>
    </div>
    <div class="form-row">
      <div class="form-group col-md-5">
        <label for="email">Email</label>
        <input type="email" class="form-control" name="email" id="email" placeholder="Email" required>
      </div>
      <div class="form-group col-md-5">
        <label for="password">Password</label>
        <input type="password" class="form-control" name="password" id="Password" placeholder="Password" required>
      </div>
    </div>
    <div class="form-group">
      <label for="street">Address</label>
      <input type="text" class="form-control" name="street" id="street" placeholder="1234 Main St" required>
    </div>
    <div class="form-row">
      <div class="form-group col-md-6">
        <label for="city">City</label>
        <input type="text" class="form-control" name="city" id="city" required>
      </div>
      <div class="form-group col-md-4">
        <label for="state">State</label>
        <select class="form-control" name="state" id="state">
          {{#each states}}
          <option value="{{this.stateCode}}">{{this.stateCode}}-{{this.stateName}}</option>
          {{/each}}
        </select>
      </div>
      <div class="form-group col-md-2">
        <label for="zipCode">Zip Code</label>
        <input type="text" class="form-control" name="zipCode" id="zipCode" required>
      </div>

      <div class="form-group">
        <label for="phone">Phone Number</label>
        <input type="phone" class="form-control" name="phone" id="phone" placeholder="212 543-9874" required>
      </div>

    </div>
    <div class="form-group" hidden>
      <div class="form-check">
        <input class="form-check-input" name="showInformation" type="checkbox" id="gridCheck">
        <label class="form-check-label" for="gridCheck">
          Display my information
        </label>
      </div>
    </div>
    <div class=" text-center mx-auto">
      <button type="submit" class="btn btn-primary btn-block mx-auto">Submit</button>
    </div>
  </div>
  <br>
  <br>
  <br>
  <br>
</form>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict';
    window.addEventListener('load', function () {
      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      var forms = document.getElementsByClassName('needs-validation');
      // Loop over them and prevent submission
      var validation = Array.prototype.filter.call(forms, function (form) {
        form.addEventListener('submit', function (event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>